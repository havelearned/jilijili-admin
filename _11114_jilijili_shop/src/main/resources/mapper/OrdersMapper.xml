<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.jilijili.mall.shop.mapper.OrdersMapper">

    <resultMap id="BaseResultMap" type="top.jilijili.module.pojo.entity.shop.Orders">
        <id property="orderId" column="order_id" jdbcType="BIGINT"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="orderDate" column="order_date" jdbcType="TIMESTAMP"/>
        <result property="orderStatus" column="order_status" jdbcType="TINYINT"/>
        <result property="totalAmount" column="total_amount" jdbcType="DECIMAL"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
    </resultMap>


    <sql id="Base_Column_List">
                order_id, user_id, order_date,
                order_status, total_amount, created_time,
                updated_time
    </sql>
    <select id="queryOrderToDayData" resultType="top.jilijili.module.pojo.vo.shop.OrderEChartsVo">
        select date(created_time)                      as created_time,
               sum(if (order_status = '已完成', 1, 0)) as completed_orders,
               sum(if (order_status = '未完成', 1, 0)) as incomplete_orders,
               sum(if (order_status = '过期', 1, 0))   as expired_orders,
               count(*)                                as total_orders
        from shop_orders
        where date(created_time) = curdate()
        group by created_time;
    </select>
    <select id="queryOrdersByDate" resultType="top.jilijili.module.pojo.vo.shop.OrderEChartsVo">
        select date(created_time) as created_time,
        sum(if (order_status = '已完成', 1, 0)) as completed_orders,
        sum(if (order_status = '未完成', 1, 0)) as incomplete_orders,
        sum(if (order_status = '过期', 1, 0)) as expired_orders,
        count(*) as total_orders
        from shop_orders
        <where>
            <if test="orderDto.comparisonTime != null">
                and created_time between #{orderDto.createdTime} and #{orderDto.comparisonTime}
            </if>
        </where>
        group by created_time;
    </select>

    <select id="selectOrderListByUserId" resultType="top.jilijili.module.pojo.vo.shop.OrdersVo">
        select o.*, u.user_id, u.nickname, u.avatar
        from shop_orders o
                 inner join sys_user u on o.user_id = u.user_id
        ${ew.customSqlSegment}

    </select>

    <select id="selectOrderList" resultType="top.jilijili.module.pojo.vo.shop.OrdersVo">
        select o.*, u.user_id, u.nickname, u.avatar
        from shop_orders o
                 left join sys_user u on o.user_id = u.user_id
            ${ew.customSqlSegment}

    </select>


    <select id="selectOrderInfoById" resultMap="orderInfoResultMap">
        SELECT o.order_id,
               o.order_date,
               o.order_status,
               o.total_amount,
               o.created_time,
               o.updated_time,
               oi.item_id,
               oi.quantity,
               oi.subtotal,
               p.product_id,
               p.product_name,
               p.description,
               p.price,
               p.stock_quantity,
               p.image_url,
               s.user_id,
               s.nickname,
               s.avatar,
               c.category_name,
               c.category_id
        FROM shop_orders o
                 INNER JOIN shop_order_items oi ON oi.order_id = o.order_id
                 LEFT JOIN shop_products p ON p.product_id = oi.product_id
                 LEFT JOIN shop_categories c ON p.category_id = c.category_id
                 LEFT JOIN sys_user s ON s.user_id = o.user_id
        WHERE o.order_id = #{orderId}
    </select>

    <resultMap id="orderInfoResultMap" type="top.jilijili.module.pojo.vo.shop.OrdersVo">
        <id property="orderId" column="order_id"/>

        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="orderDate" column="order_date" jdbcType="TIMESTAMP"/>
        <result property="orderStatus" column="order_status" jdbcType="TINYINT"/>
        <result property="totalAmount" column="total_amount" jdbcType="DECIMAL"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
        <association property="user" javaType="top.jilijili.module.pojo.vo.sys.SysUserVo">
            <id property="userId" column="user_id"/>
            <result property="nickname" column="nickname"/>
            <result property="avatar" column="avatar"/>
        </association>

        <collection property="ordersItem" ofType="top.jilijili.module.pojo.vo.shop.OrdersItemVo">
            <result property="itemId" column="item_id"/>
            <result property="quantity" column="quantity"/>
            <result property="subtotal" column="subtotal"/>

            <association property="products" javaType="top.jilijili.module.pojo.vo.shop.ProductsVo">
                <id property="productId" column="product_id"/>
                <result property="productName" column="product_name"/>
                <result property="imageUrl" column="image_url"/>
                <result property="price" column="price"/>

                <!-- Other properties of Product -->
            </association>

            <association property="categories" javaType="top.jilijili.module.pojo.entity.shop.Categories">
                <id property="categoryId" column="category_id"/>
                <result property="categoryName" column="category_name"/>
                <!-- Other properties of Category -->
            </association>

        </collection>
    </resultMap>

</mapper>
