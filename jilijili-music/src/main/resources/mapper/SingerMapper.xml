<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wang.jilijili.music.mapper.SingerMapper">

    <resultMap id="BaseResultMap" type="wang.jilijili.music.pojo.entity.Singer">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="singerName" column="singer_name" jdbcType="VARCHAR"/>
        <result property="singerDetails" column="singer_details" jdbcType="VARCHAR"/>
        <result property="singerPhoto" column="singer_photo" jdbcType="VARCHAR"/>
        <result property="locked" column="locked" jdbcType="TINYINT"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="singerinfovo" type="wang.jilijili.music.pojo.vo.SingerInfoVo">
        <!--        <id property="singerId" column="id" jdbcType="VARCHAR"/>-->
        <result property="singerName" column="singer_name" jdbcType="VARCHAR"/>
        <result property="singerDetails" column="singer_details" jdbcType="VARCHAR"/>
        <result property="singerPhoto" column="singer_photo" jdbcType="VARCHAR"/>
        <result property="locked" column="locked" jdbcType="TINYINT"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <!--一对多返回-->
        <collection property="alibumVos" resultMap="alibumVosMap"/>
    </resultMap>

    <resultMap id="alibumVosMap" type="wang.jilijili.music.pojo.vo.AlibumVo">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="albumName" column="album_name" jdbcType="VARCHAR"/>
        <result property="details" column="details" jdbcType="VARCHAR"/>
        <result property="albumImg" column="album_img" jdbcType="VARCHAR"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="alibumsongvomap" type="wang.jilijili.music.pojo.vo.AlibumSongVo">
        <!--        <id property="id" column="id" jdbcType="VARCHAR" />-->
        <result property="albumName" column="album_name" jdbcType="VARCHAR"/>
        <result property="details" column="details" jdbcType="VARCHAR"/>
        <result property="albumImg" column="album_img" jdbcType="VARCHAR"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <!--一对多返回-->
        <collection property="musicVoList" ofType="wang.jilijili.music.pojo.vo.MusicVo">
            <id property="id" column="id" jdbcType="VARCHAR"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="TINYINT"/>
            <result property="description" column="description" jdbcType="VARCHAR"/>
            <result property="musicFilepath" column="music_filepath" jdbcType="VARCHAR"/>
            <result property="albumId" column="album_id" jdbcType="VARCHAR"/>
            <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
            <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id
        ,singer_name,singer_details,
        singer_photo,locked,
        created_time,updated_time
    </sql>
    <select id="getSingerAlbumInformation" resultMap="singerinfovo">
        select s.id as singerId,
               s.singer_name,
               s.singer_details,
               s.singer_photo,
               s.locked,
               s.created_time,
               a.id,
               a.album_name,
               a.album_img,
               a.details,
               a.created_time
        from singer_alibum sa
                 left join alibum a on a.id = sa.alibum_id
                 left join singer s on s.id = sa.singer_id
        where sa.singer_id = #{singerId}
    </select>

    <select id="getSingerByAlibumBySongAll" resultMap="alibumsongvomap">
        select a.album_name,
               a.details,
               a.album_img,
               a.created_time,
               a.updated_time,
               m.id,
               m.name,
               m.status,
               m.description,
               m.music_filepath,
               m.singer_id,
               m.album_id,
               m.created_time,
               m.updated_time
        from music m
                 left join alibum a on a.id = m.album_id
        where a.id = #{albumId}
    </select>


</mapper>
