<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.jilijili.common.core.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="top.jilijili.common.core.pojo.entity.User">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="VARCHAR"/>
        <result property="locked" column="locked" jdbcType="TINYINT"/>
        <result property="unseal" column="enabled" jdbcType="TINYINT"/>
        <result property="lastLoginIp" column="last_login_ip" jdbcType="VARCHAR"/>
        <result property="lastLoginTime" column="last_login_time" jdbcType="TIMESTAMP"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="userRolesMap" type="top.jilijili.common.core.pojo.entity.User">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="VARCHAR"/>
        <result property="unseal" column="enabled" jdbcType="TINYINT"/>
        <result property="lastLoginIp" column="last_login_ip" jdbcType="VARCHAR"/>
        <result property="lastLoginTime" column="last_login_time" jdbcType="TIMESTAMP"/>
        <collection property="roles" resultMap="roleRolesMap"/>
    </resultMap>
    <resultMap id="roleRolesMap" type="top.jilijili.common.core.pojo.entity.Role">
        <!--        <id property="id" column="id" jdbcType="VARCHAR"/>-->
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="userRolesVoMap" type="top.jilijili.common.core.pojo.vo.UserVo">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="VARCHAR"/>
        <result property="unseal" column="enabled" jdbcType="TINYINT"/>
        <result property="lastLoginIp" column="last_login_ip" jdbcType="VARCHAR"/>
        <result property="lastLoginTime" column="last_login_time" jdbcType="TIMESTAMP"/>
        <collection property="roles" ofType="top.jilijili.common.core.pojo.vo.RoleVo">
            <id property="roleId" column="roleId" jdbcType="VARCHAR"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="title" column="title" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id,username,nickname,
        password,gender,locked,
        enabled,last_login_ip,last_login_time,
        created_time,updated_time
    </sql>


    <insert id="initUserRole" parameterType="java.lang.String">
        insert into user_role(user_id, role_id) value
            (#{userId}, #{roleId})

    </insert>


    <select id="userRoles" resultMap="userRolesMap" parameterType="java.lang.String">
        select u.id,
               u.username,
               u.nickname,
               u.password,
               u.gender,
               u.enabled as unseal,
               u.last_login_ip,
               u.last_login_time,
               r.title,
               r.name
        from `user` u
                 left join user_role ur on u.id = ur.user_id
                 left join `role` r on r.id = ur.role_id
        where u.id = #{id}
    </select>

    <select id="getUserByUsername" resultMap="userRolesMap" parameterType="java.lang.String">
        select u.id,
               u.username,
               u.nickname,
               u.password,
               u.gender,
               u.enabled as unseal,
               u.last_login_ip,
               u.last_login_time,
               r.title,
               r.name
        from `user` u
                 left join user_role ur on u.id = ur.user_id
                 left join `role` r on r.id = ur.role_id
        where u.username = #{username}
    </select>

    <select id="getMenu" resultType="top.jilijili.common.core.pojo.entity.SysMenu">
        select sm.menu_id, menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, perms, icon, remark
        from `user` u
                 inner join user_role ur on u.id = ur.user_id
                 inner join sys_role_menu m on ur.role_id = m.role_id
                 inner join sys_menu sm on m.menu_id = sm.menu_id
        where u.id = #{userId};
    </select>

    <select id="pageQuery" resultMap="userRolesVoMap">
        select u.id,u.username,u.nickname,u.password,u.gender,u.locked,u.enabled,u.last_login_ip,u.last_login_time,
               r.id as roleId,r.name,r.title
        from `user` u
                 left join user_role url on u.id = url.user_id
                 left join role r on url.role_id = r.id
        ${ew.customSqlSegment}
    </select>


</mapper>
